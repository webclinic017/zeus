{
  "evalStrID": "1709417012941534000",
  "evalID": 1709417012941534000,
  "evalName": "index_entities_data",
  "evalType": "model",
  "evalGroupName": "entity_indexing",
  "evalModel": "gpt-4-0125-preview",
  "evalFormat": "json",
  "triggerFunctions": [
    {
      "triggerStrID": "1709416914281318000",
      "triggerID": 1709416914281318000,
      "triggerName": "trigger_entities_indexer",
      "triggerGroup": "indexer",
      "triggerAction": "api-retrieval",
      "evalTriggerAction": {
        "evalTriggerState": "",
        "evalResultsTriggerOn": ""
      },
      "evalTriggerActions": [
        {
          "evalStrID": "1709417012941534000",
          "triggerID": 1709416914281318000,
          "triggerStrID": "1709416914281318000",
          "evalTriggerState": "filter",
          "evalResultsTriggerOn": "all-pass"
        }
      ]
    }
  ],
  "schemas": [
    {
      "schemaID": 1709233769412026000,
      "schemaStrID": "1709233769412026000",
      "schemaName": "extract_relevant_tweets",
      "schemaGroup": "mockingbird",
      "schemaDescription": "This extracts tweet ids and calculates a spam score from 1-5.",
      "isObjArray": true,
      "fields": [
        {
          "fieldID": 1709414328387614000,
          "fieldStrID": "1709414328387614000",
          "fieldName": "firstName",
          "fieldDescription": "This should extract the first name, if provided, else add an empty string",
          "dataType": "string",
          "evalMetrics": [
            {
              "evalMetricID": 1709417439072005000,
              "evalOperator": "",
              "evalState": "filter",
              "evalExpectedResultState": "ignore",
              "evalMetricComparisonValues": {}
            }
          ]
        },
        {
          "fieldID": 1709414328512017000,
          "fieldStrID": "1709414328512017000",
          "fieldName": "labels",
          "fieldDescription": "Generate keywords that describe the examined task request and content related to the entity and potential action if called for, for example, it should be a label for business, personal, google-search, user-info. For the action, things such as follow-up, or todo. For statuses, deadlines, priority can add labels like urgent, or a timeframe, If the task instructions for example is to create prospecting leads, then it should add tags that describe the purpose, You should strive for accurate labels that are consistently generated, the labels should make it easy to keyword search find for most related task specific content, action, status, etc. In most cases you should add no more than a few labels",
          "dataType": "array[string]",
          "evalMetrics": [
            {
              "evalMetricID": 1709417439110431000,
              "evalOperator": "length-greater-than",
              "evalState": "filter",
              "evalExpectedResultState": "pass",
              "evalMetricComparisonValues": {
                "evalComparisonNumber": null,
                "evalComparisonString": "1"
              }
            }
          ]
        },
        {
          "fieldID": 1709414328448053000,
          "fieldStrID": "1709414328448053000",
          "fieldName": "lastName",
          "fieldDescription": "This should extract the last name, if provided, else add an empty string",
          "dataType": "string",
          "evalMetrics": [
            {
              "evalMetricID": 1709417439142503000,
              "evalOperator": "",
              "evalState": "filter",
              "evalExpectedResultState": "ignore",
              "evalMetricComparisonValues": {}
            }
          ]
        },
        {
          "fieldID": 1709414328578950000,
          "fieldStrID": "1709414328578950000",
          "fieldName": "metadataText",
          "fieldDescription": "This should extract the contents of the examined content related to the entity, if the contents contains lots of non-language elements like html or js, it should summarize the findings using the most logical english description summary",
          "dataType": "string",
          "evalMetrics": [
            {
              "evalMetricID": 1709417439172547000,
              "evalOperator": "length-greater-than",
              "evalState": "filter",
              "evalExpectedResultState": "pass",
              "evalMetricComparisonValues": {
                "evalComparisonString": "100"
              }
            }
          ]
        },
        {
          "fieldID": 1709414328259537000,
          "fieldStrID": "1709414328259537000",
          "fieldName": "nickname",
          "fieldDescription": "The format should follow platform-specific conventions. E.g., for reddit use reddit usernames, for twitter, use the unique handle of the user including the '@' symbol; for Email, provide a valid email address format (username@example.com), for linkedIn should be the linked in route like this: https://www.linkedin.com/in/alexandersgeorge/",
          "dataType": "string",
          "evalMetrics": [
            {
              "evalMetricID": 1709417439201842000,
              "evalOperator": "",
              "evalState": "filter",
              "evalExpectedResultState": "ignore",
              "evalMetricComparisonValues": {}
            }
          ]
        },
        {
          "fieldID": 1709414328316873000,
          "fieldStrID": "1709414328316873000",
          "fieldName": "platform",
          "fieldDescription": "Acceptable options: kubernetes, linkedIn, reddit, twitter, email, discord, slack, telegram, sms, unspecified. select the platform that matches best from the information provided.",
          "dataType": "string",
          "evalMetrics": [
            {
              "evalMetricID": 1709417439231909000,
              "evalOperator": "equals-one-from-list",
              "evalState": "filter",
              "evalExpectedResultState": "pass",
              "evalMetricComparisonValues": {
                "evalComparisonString": "kubernetes, linkedIn, reddit, twitter, email, discord, slack, telegram, sms, unspecified"
              }
            }
          ]
        }
      ]
    }
  ]
}